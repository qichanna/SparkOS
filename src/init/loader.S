%include "head.S"
BITS 16
_start2:
;输出背景色绿色，前景色红色，并且跳动的字符串"1 MBR"
mov byte [gs:0x00],'2'
mov byte [gs:0x01],0xA4     ; A表示绿色背景闪烁，4表示前景色为红色

mov byte [gs:0x02],' '
mov byte [gs:0x03],0xA4

mov byte [gs:0x04],'L'
mov byte [gs:0x05],0xA4   

mov byte [gs:0x06],'O'
mov byte [gs:0x07],0xA4

mov byte [gs:0x08],'A'
mov byte [gs:0x09],0xA4

mov byte [gs:0x0a],'D'
mov byte [gs:0x0b],0xA4

mov byte [gs:0x0c],'E'
mov byte [gs:0x0d],0xA4

mov byte [gs:0x0e],'R'
mov byte [gs:0x0f],0xA4

; jmp $		       ; 通过死循环使程序悬停在此




; CYLS	EQU		0x0ff0			; �u�[�g�Z�N�^���ݒ肷��
; LEDS	EQU		0x0ff1
; VMODE	EQU		0x0ff2			; �F���Ɋւ�����B���r�b�g�J���[���H
; SCRNX	EQU		0x0ff4			; �𑜓x��X
; SCRNY	EQU		0x0ff6			; �𑜓x��Y
; VRAM	EQU		0x0ff8			; �O���t�B�b�N�o�b�t�@�̊J�n�Ԓn

; 		ORG		0xc200			; ���̃v���O�������ǂ��ɓǂݍ��܂��̂�

; 		MOV		AL,0x13			; VGA�O���t�B�b�N�X�A320x200x8bit�J���[
; 		MOV		AH,0x00
; 		INT		0x10
; 		MOV		BYTE [VMODE],8	; ��ʃ��[�h����������
; 		MOV		WORD [SCRNX],320
; 		MOV		WORD [SCRNY],200
; 		MOV		DWORD [VRAM],0x000a0000

; ; �L�[�{�[�h��LED��Ԃ�BIOS�ɋ����Ă��炤

; 		MOV		AH,0x02
; 		INT		0x16 			; keyboard BIOS
; 		MOV		[LEDS],AL




mov eax, KERNEL_START_SECTOR        ; kernel.bin所在的扇区号
mov bx, KERNEL_BIN_BASE_ADDR       ; 从磁盘读出后，写入到ebx指定的地址
mov cx, 5		       ; 读入的扇区数

call rd_disk_m_16
; call kernel_init
; jmp KERNEL_ENTRY_POINT 
jmp KERNEL_ENTRY_POINT 




rd_disk_m_16:	   
;-------------------------------------------------------------------------------
				       ; eax=LBA??????
				       ; ebx=??????д????????
				       ; ecx=???????????
      mov esi,eax	  ;????eax
      mov di,cx		  ;????cx
;??д???:
;??1????????????????????
      mov dx,0x1f2
      mov al,cl
      out dx,al            ;???????????

      mov eax,esi	   ;???ax

;??2??????LBA???????0x1f3 ~ 0x1f6

      ;LBA???7~0λд????0x1f3
      mov dx,0x1f3                       
      out dx,al                          

      ;LBA???15~8λд????0x1f4
      mov cl,8
      shr eax,cl
      mov dx,0x1f4
      out dx,al

      ;LBA???23~16λд????0x1f5
      shr eax,cl
      mov dx,0x1f5
      out dx,al

      shr eax,cl
      and al,0x0f	   ;lba??24~27λ
      or al,0xe0	   ; ????7??4λ?1110,???lba??
      mov dx,0x1f6
      out dx,al

;??3??????0x1f7???д???????0x20 
      mov dx,0x1f7
      mov al,0x20                        
      out dx,al

;??4????????????
  .not_ready:
      ;??????д????д????????????????????????
      nop
      in al,dx
      and al,0x88	   ;??4λ?1???????????????????????????7λ?1???????
      cmp al,0x08
      jnz .not_ready	   ;??δ?????????????

;??5??????0x1f0????????
      mov ax, di
      mov dx, 256
      mul dx
      mov cx, ax	   ; di????????????????????????512??????ζ?????????
			   ; ????di*512/2?Σ?????di*256
      mov dx, 0x1f0
  .go_on_read:
      in ax,dx
      mov [bx],ax
      add bx,2		  
      loop .go_on_read
      ret











; fin:
; 		HLT
; 		JMP		fin


